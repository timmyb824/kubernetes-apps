---
apiVersion: v1
kind: Namespace
metadata:
  name: blazork8s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: blazork8s
  name: blazork8s
  namespace: blazork8s
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: blazork8s
  name: blazork8s
  namespace: blazork8s
rules:
  - verbs:
      - "*"
    apiGroups:
      - "*"
    resources:
      - "*"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: blazork8s
  name: blazork8s
rules:
  - verbs:
      - "*"
    apiGroups:
      - "*"
    resources:
      - "*"
  - verbs:
      - "*"
    nonResourceURLs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: blazork8s
  name: blazork8s
  namespace: blazork8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: blazork8s
subjects:
  - kind: ServiceAccount
    name: blazork8s
    namespace: blazork8s
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: blazork8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: blazork8s
subjects:
  - kind: ServiceAccount
    name: blazork8s
    namespace: blazork8s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blazork8s-appsettings
  namespace: blazork8s
data:
  appsettings.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "SimpleI18n": {
        "LocaleFilesPath": "wwwroot/lang",
        "DefaultCultureName": "en-US",
      },
      "AllowedHosts": "*",
      "ProSettings": {
        "NavTheme": "dark",
        "HeaderHeight": 48,
        "Layout": "side",
        "ContentWidth": "Fluid",
        "FixedHeader": true,
        "FixSiderbar": true,
        "Title": "Blazor K8S",
        "IconfontUrl": "",
        "PrimaryColor": "daybreak",
        "ColorWeak": false,
        "SplitMenus": false,
        "HeaderRender": false,
        "FooterRender": false,
        "MenuRender": true,
        "MenuHeaderRender": true
      },
      "AI": {
        "Enable": true,
        "Select": "OpenAI"
      },
      "Prompt": {
        "Error": "Please use your expertise as a Kubernetes specialist to assess the following Kubernetes information, focusing on whether there are any issues with fields such as status, state, message, etc. If there are no issues, please reply `No issues`, If there are issues, please provide the most likely solution in steps within 300 characters. Format your output as follows:  Problem: \r{Explain the error here} \rSolution:\r {Provide step-by-step solution here} .Please respond in `{language}`",
        "Security": "Please use your expertise as a Kubernetes specialist to simplify the following Kubernetes security-related information, and provide the most likely security solution in steps of no more than 300 characters. Format your output as follows: Issue:\r {Explain  here} \rSolution:\r {solution here}.Please respond in `{language}`",
        "Optimize": "Please use your expertise as a Kubernetes specialist to assess the following Kubernetes information, focusing on whether there is room for optimization in areas such as runtime permissions, naming conventions, and configuration rationality,and any other Optimization Points.\r\n If there are no issues, please reply `It is already optimal.`. If there are optimization points, please provide the most likely solution within 300 characters, formatted as follows: \r\nOptimization Point:\r\n{Explain the optimization point here}\r\n\r\nOptimization Plan:\r\n{Provide step-by-step optimization plan here}\r\nPlease respond in `{language}`.",
        "ErrorSummarize": "Please summarize the following exception information in `{language}` and provide a summary statistic within 300 characters. Please respond in `{language}`.",
        "Translate": "Please translate the following content, word for word, into {language}. Please make sure not to miss any details and maintain the original format. Please respond in `{language}`. ",
        "CronExplain": "Please explain the following Cron expression in detail using `{language}`. Please respond in `{language}`.expression:\r ",
        "FeatureExplain": "What is the {FeatureName} feature in k8s? How to turn it on? How to adjust? Please explain in detail.  Please respond in `{language}`.\r "
      },
      "OpenAI": {
        "Token": "<path:secret/data/argocd#OPENAI_API_KEY>",
        "Model": "gpt-3.5-turbo",
        "BaseUrl": "https://api.openai.com/v1"
      },
      "MoonShotAI": {
        "Token": "sk-xxxxxxx7dd3494880a7920axxxxxxxxx",
        "Model": "moonshot-v1-8k",
        "BaseUrl": "https://api.moonshot.cn/v1"
      },
      "XunFeiAI": {
        "APPID": "xxxxxx",
        "APISecret": "XXXjYzgzY2E0ZTkwxxxxxxYxMDJkYTBl",
        "APIKey": "xxxxxxx7dd3494880a7920axxxxxxxxx",
        "Version": "v3.1",
        "Domain": "generalv3"
      },
      "QwenAI": {
        "APIKey": "sk-xxxxxxx7dd3494880a7920axxxxxxxxx",
        "Model": "qwen-1.8b-chat"
      },
      "GeminiAI": {
        "APIKey": "AIxxxxxxx7dd3494880a7920axxxxxxxxx",
        "Model": "gemini-pro"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: blazork8s
  namespace: blazork8s
  labels:
    app: blazork8s
spec:
  ports:
    - name: http-blazork8s
      protocol: TCP
      port: 4000
      targetPort: 8080
  selector:
    app: blazork8s
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blazork8s
  namespace: blazork8s
  labels:
    app: blazork8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blazork8s
  template:
    metadata:
      labels:
        app: blazork8s
    spec:
      containers:
        - name: blazork8s
          image: ghcr.io/weibaohui/blazork8s:0.2.7
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http-blazork8s
          imagePullPolicy: Always
          volumeMounts:
            - name: appsettings-volume
              mountPath: /app/appsettings.json
              subPath: appsettings.json
      volumes:
        - name: appsettings-volume
          configMap:
            name: blazork8s-appsettings
      restartPolicy: Always
      serviceAccountName: blazork8s
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: blazerk8s-ingress
  namespace: blazork8s
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`blazerk8s.local.timmybtech.com`)
      kind: Rule
      services:
        - name: webserver
          port: 8080
  tls:
    secretName: local-timmybtech-com-tls
