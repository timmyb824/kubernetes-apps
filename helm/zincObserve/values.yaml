# Default values for zincobserve.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: public.ecr.aws/zinclabs/zincobserve
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # eks.amazonaws.com/role-arn: arn:aws:iam::12345353456:role/zo-s3-eks
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000
  runAsUser: 10000
  runAsGroup: 3000
  runAsNonRoot: true

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

replicaCount:
  ingester: 1
  querier: 1
  router: 1
  alertmanager: 1
  compactor: 1

ingester:
  persistence:
    enabled: true
    size: 32Gi
    storageClass: "nfs-csi-synologynas"
    accessModes:
      - ReadWriteOnce
    annotations: {}
    volumePermissions:
      enabled: false

# Credentials for authentication
auth:
  ZO_ROOT_USER_EMAIL: ${zuser}
  ZO_ROOT_USER_PASSWORD: ${zpassword}

config:
  ZO_LOCAL_MODE: "false"
  ZO_HTTP_PORT: "5080"
  ZO_GRPC_PORT: "5081"
  ZO_GRPC_TIMEOUT: "600"
  ZO_GRPC_ORG_HEADER_KEY: "zinc-org-id"
  ZO_ROUTE_TIMEOUT: "600"
  ZO_LOCAL_MODE_STORAGE: "disk"
  ZO_NODE_ROLE: "all"
  ZO_INSTANCE_NAME: ""
  ZO_DATA_DIR: "./data/"
  ZO_DATA_WAL_DIR: ""
  ZO_DATA_STREAM_DIR: ""
  ZO_WAL_MEMORY_MODE_ENABLED: "false"
  ZO_FILE_EXT_JSON: ".json"
  ZO_FILE_EXT_PARQUET: ".parquet"
  ZO_PARQUET_COMPRESSION: "zstd"
  ZO_TIME_STAMP_COL: "_timestamp"
  ZO_WIDENING_SCHEMA_EVOLUTION: "false"
  ZO_FEATURE_PER_THREAD_LOCK: "false"
  ZO_FEATURE_FULLTEXT_ON_ALL_FIELDS: "false"
  ZO_UI_ENABLED: "true"
  ZO_METRICS_DEDUP_ENABLED: "true"
  ZO_TRACING_ENABLED: "false"
  OTEL_OTLP_HTTP_ENDPOINT: "http://127.0.0.1:5080/api/nexus/traces"
  ZO_TRACING_HEADER_KEY: "Authorization"
  ZO_TRACING_HEADER_VALUE: "Basic YWRtaW46Q29tcGxleHBhc3MjMTIz"
  ZO_TELEMETRY: "true"
  ZO_TELEMETRY_URL: "https://e1.zinclabs.dev"
  ZO_JSON_LIMIT: "209715200"
  ZO_PAYLOAD_LIMIT: "209715200"
  ZO_MAX_FILE_SIZE_ON_DISK: "10"
  ZO_MAX_FILE_RETENTION_TIME: "600"
  ZO_FILE_PUSH_INTERVAL: "10"
  ZO_FILE_MOVE_THREAD_NUM: "0"
  ZO_QUERY_THREAD_NUM: "0"
  ZO_TS_ALLOWED_UPTO: "5"
  ZO_METRICS_LEADER_PUSH_INTERVAL: "15"
  ZO_METRICS_LEADER_ELECTION_INTERVAL: "30"
  ZO_HEARTBEAT_INTERVAL: "30"
  ZO_COMPACT_ENABLED: "true"
  ZO_COMPACT_INTERVAL: "600"
  ZO_COMPACT_MAX_FILE_SIZE: "256"
  ZO_MEMORY_CACHE_ENABLED: "true"
  ZO_MEMORY_CACHE_CACHE_LATEST_FILES: "false"
  ZO_MEMORY_CACHE_MAX_SIZE: "0"
  ZO_MEMORY_CACHE_RELEASE_SIZE: "0"
  RUST_LOG: info
  ZO_COLS_PER_RECORD_LIMIT: "200"
  ZO_ETCD_PREFIX: "/zinc/observe/"
  ZO_ETCD_CONNECT_TIMEOUT: "2"
  ZO_ETCD_COMMAND_TIMEOUT: "5"
  ZO_ETCD_LOCK_WAIT_TIMEOUT: "600"
  ZO_ETCD_USER: ""
  ZO_ETCD_PASSWORD: ""
  ZO_ETCD_CLIENT_CERT_AUTH: "false"
  ZO_ETCD_TRUSTED_CA_FILE: ""
  ZO_ETCD_CERT_FILE: ""
  ZO_ETCD_KEY_FILE: ""
  ZO_ETCD_DOMAIN_NAME: ""
  ZO_ETCD_LOAD_PAGE_SIZE: "10000"
  ZO_SLED_DATA_DIR: ""
  ZO_SLED_PREFIX: "/zinc/observe/"
  # ZO_S3_PROVIDER: "minio" # Need to set this up only if minio is being for object storage. Will be set automatically if enabled minio is being used.
  ZO_S3_SERVER_URL: "" # do not need to set this if enabled minio is being used. settings will be picked from minio section
  ZO_S3_REGION_NAME: "" # do not need to set this if enabled minio is being used. settings will be picked from minio section
  ZO_S3_ACCESS_KEY: "" # do not need to set this if enabled minio is being used. settings will be picked from minio section
  ZO_S3_SECRET_KEY: "" # do not need to set this if enabled minio is being used. settings will be picked from minio section
  ZO_S3_BUCKET_NAME: "mysuperduperbucket" # do not need to set this if enabled minio is being used. settings will be picked from minio section
  ZO_DATA_LIFECYCLE: "0"

service:
  type: ClusterIP
  # type: LoadBalancer
  port: 5080

certIssuer:
  enabled: false

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/issuer: letsencrypt
    # kubernetes.io/tls-acme: true
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

etcd:
  enabled: true # if true then etcd will be deployed as part of zincobserve
  externalUrl: "my_custom_host.com:2379" # if enabled is false then this is required
  replicaCount: 3 # if enabled is true then this is required. should be odd number
  image:
    registry: docker.io
    repository: bitnami/etcd
    tag: 3.5.15-debian-12-r6
    digest: ""
  auth:
    rbac:
      create: false
      allowNoneAuthentication: true
      rootPassword: ""
  logLevel: "info"
  extraEnvVars:
    - name: ETCD_QUOTA_BACKEND_BYTES
      value: "17179869184"
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}

minio:
  enabled: false # if true then minio will be deployed as part of zincobserve
  region: "us-east-1"
  rootUser: rootuser
  rootPassword: rootpass123
  drivesPerNode: 1
  replicas: 4
  mode: distributed # or standalone
  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2023-02-10T18-48-39Z
    pullPolicy: IfNotPresent
  mcImage:
    repository: quay.io/minio/mc
    tag: RELEASE.2023-01-28T20-29-38Z
    pullPolicy: IfNotPresent
  buckets:
    - name: mysuperduperbucket
      policy: none
      purge: false
  resources:
    requests:
      memory: 256Mi
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}
