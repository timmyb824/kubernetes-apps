loki:
  enabled: true
  isDefault: true
  url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  datasource:
    jsonData: "{}"
    uid: ""
  ingress:
    enabled: false
  resources: #{}
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
  updateStrategy:
    type: RollingUpdate

## everything below was here in the file initially
  monitoring:
    rules:
      additionalGroups:
        - name: loki-rules
          rules:
            - record: job:loki_request_duration_seconds_bucket:sum_rate
              expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
            - record: job_route:loki_request_duration_seconds_bucket:sum_rate
              expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
            - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
              expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)

  #to disable monitoring (set both to false):
  selfMonitoring:
      enabled: true

  serviceMonitor:
      enabled: true

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      s3:
      endpoint: 'http://192.168.86.44:9000/'
      secretAccessKey: ${MINIO_SECRET_ACCESS_KEY}
      accessKeyId: ${MINIO_ACCESS_KEY_ID}
      s3ForcePathStyle: true
      insecure: true

