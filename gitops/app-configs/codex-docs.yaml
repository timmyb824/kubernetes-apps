---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: codex-docs
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    avp.kubernetes.io/path: "secret/data/codex-docs"
spec:
  destination:
    namespace: codex-docs
    server: "https://kubernetes.default.svc"
  project: default
  source:
    repoURL: oci:ghcr.io/codex-team/codex.docs.chart/codex-docs
    targetRevision: 2.1.0
    chart: codex-docs
    helm:
      releaseName: codex-docs
      values: |
          replicaCount: 1

          annotations:

          configuration:
            port: 3000
            host: "0.0.0.0"
            uploads:
              driver: "s3"
              s3:
                bucket: "codex-docs"
                region: "us-east-1"
                baseUrl: <ENDPOINT>
                keyPrefix: "/"
                accessKeyId: <ACCESS_KEY>
                secretAccessKey: <SECRET_ACCESS_KEY>
            frontend:
              title: "TimmyB Docs"
              description: "A documentation website for TimmyB Tech"
              startPage: ""
              misprintsChatId: "12344564"
              yandexMetrikaId: <METRICA_ID>
              carbon:
                serve: ""
                placement: ""
              menu: []
            auth:
              password: <AUTH_PASSWORD>
              secret: <AUTH_SECRET>

            database:
              driver: mongodb # you can change database driver here. 'mongodb' or 'local'
              mongodb:
                uri: <MONGODB_URI>

          image:
            repository: ghcr.io/codex-team/codex.docs
            pullPolicy: IfNotPresent
            tag: ""

          imagePullSecrets: []
          fullnameOverride: ""

          podAnnotations: {}

          podSecurityContext: {}

          securityContext: {}

          service:
            type: ClusterIP
            port: 3000

          resources: {}

          nodeSelector: {}

          tolerations: []

          affinity: {}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: codex-docs-ingress
  namespace: codex-docs
  annotations:
    kubernetes.io/ingress.class: traefik-external
    # argocd.argoproj.io/hook: Sync
    helm.sh/hook: "post-install"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`docs.local.timmybtech.com`)
      kind: Rule
      services:
        - name: codex-docs
          port: 3000
  tls:
    secretName: local-timmybtech-com-tls # or local-example-com-staging-tls
