apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: crowdsec
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations: {}
spec:
  destination:
    namespace: crowdsec
    server: "https://kubernetes.default.svc"
  project: default
  sources:
    - repoURL: https://crowdsecurity.github.io/helm-charts
      targetRevision: 0.16.0
      chart: crowdsec
      helm:
        releaseName: crowdsec
        values: |
          container_runtime: docker

          config:
            config.yaml.local: |
              db_config:
                type:     postgresql
                user:     <path:secret/data/postgres_db#USER>
                password: <path:secret/data/postgres_db#PASSWORD>
                db_name:  crowdsec
                host:     <path:secret/data/postgres_db#HOST_NAME>
                port:     5432
                sslmode:  require

          tls:
            enabled: true
            caBundle: true
            certManager:
              enabled: true
            bouncer:
              secret: "crowdsec-bouncer-tls"
            agent:
              tlsClientAuth: true
              secret: "crowdsec-agent-tls"
            lapi:
              secret: "crowdsec-lapi-tls"

          lapi:
            enabled: true
            image:
              pullPolicy: Always
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: DoesNotExist
            replicas: 1
            env:
              - name: ENROLL_KEY
                value: "<path:secret/data/argocd#CROWDSEC_ENROLL_KEY_K8S>"
              - name: ENROLL_INSTANCE_NAME
                value: "k8s-cluster"
              - name: ENROLL_TAGS
                value: "k8s linux homelab"
            resources:
              limits:
                memory: 500Mi
                cpu: 500m
              requests:
                cpu: 500m
                memory: 500Mi
            dashboard:
              enabled: false
            persistentVolume:
              data:
                enabled: false
              config:
                enabled: false
            metrics:
              enabled: true

          agent:
            enabled: true
            image:
              pullPolicy: Always
            replicas: 1
            acquisition:
              - namespace: traefik
                podName: traefik-*
                program: traefik
            env:
              - name: COLLECTIONS
                value: "crowdsecurity/linux crowdsecurity/traefik firix/authentik"
              - name: PARSERS
                value: "crowdsecurity/cri-logs crowdsecurity/whitelists"
            lapiURL: https://crowdsec-service.crowdsec.svc.cluster.local:8080
            resources:
              limits:
                memory: 250Mi
                cpu: 500m
              requests:
                cpu: 500m
                memory: 250Mi
            persistentVolume:
              config:
                enabled: false
            metrics:
              enabled: true

    - repoURL: "https://github.com/timmyb824/kubernetes-apps.git"
      path: "gitops/manifests/crowdsec"
      targetRevision: HEAD

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
