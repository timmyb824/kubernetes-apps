apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: alloy
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations: {}
spec:
  destination:
    namespace: logging
    server: "https://kubernetes.default.svc"
  project: default
  source:
    - repoURL: https://grafana.github.io/helm-charts
      targetRevision: 0.11.0
      chart: grafana/alloy
      helm:
        releaseName: alloy
        values: |
          alloy:
            configMap:
              create: true
              content: |-
                  discovery.kubernetes "pod_logs" {
                    role = "pod"
                  }

                  discovery.relabel "pod_logs" {
                    targets = discovery.kubernetes.pod_logs.targets

                    rule {
                      source_labels = ["__meta_kubernetes_pod_node_name"]
                      target_label  = "__host__"
                    }

                    rule {
                      regex  = "__meta_kubernetes_pod_label_(.+)"
                      action = "labelmap"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_name"]
                      separator     = "/"
                      target_label  = "job"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_namespace"]
                      target_label  = "namespace"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_pod_name"]
                      target_label  = "pod"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_pod_container_name"]
                      target_label  = "container"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
                      separator     = "/"
                      target_label  = "__path__"
                      replacement   = "/var/log/pods/*$1/*.log"
                    }
                  }

                  local.file_match "pod_logs" {
                    path_targets = discovery.relabel.pod_logs.output
                  }

                  loki.process "pod_logs" {
                    forward_to = [loki.write.default.receiver]

                    stage.docker { }
                  }

                  loki.source.file "pod_logs" {
                    targets               = local.file_match.pod_logs.targets
                    forward_to            = [loki.process.pod_logs.receiver]
                    legacy_positions_file = "/tmp/positions.yaml"
                  }

                  loki.write "default" {
                    endpoint {
                      url = "https://loki.local.timmybtech.com/loki/api/v1/push"
                    }
                    external_labels = {}
                  }

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSync=true
