apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
secrets:
  - name: homepage
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: Default
      enableServiceLinks: true
      containers:
        - name: homepage
          image: "ghcr.io/benphelps/homepage:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: homepage-config
              mountPath: /app/config
            - name: logs
              mountPath: /app/config/logs
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir:
            {}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: homepage-ingress
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/ingress.class: traefik-external
    gethomepage.dev/description: Dynamically Detected Homepage
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Cluster Management
    gethomepage.dev/icon: homepage.png
    gethomepage.dev/name: Homepage
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`homepage.local.timmybtech.com`)
      kind: Rule
      services:
        - name: homepage
          port: 3000
  tls:
    secretName: local-timmybtech-com-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    avp.kubernetes.io/path: "secret/data/homepage"
data:
  kubernetes.yaml: |
    mode: cluster
  # settings.yaml: ""
  settings.yaml: |
    providers:
      openweathermap: openweathermapapikey
      weatherapi: <OPENWEATHER_API_KEY>
  bookmarks.yaml: |
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/
  services.yaml: |
    - Observability:
        - Grafana:
            icon: grafana.png
            href: https://grafana.local.timmybtech.com/
            description: open source analytics & monitoring solution
            widget:
                type: grafana
                url: https://grafana.local.timmybtech.com
                username: <GRAFANA_USER>
                password: <GRAFANA_PASSWORD>
    - CICD:
        - ArgoCD:
            icon: argocd.png
            href: https://argocd.local.timmybtech.com/
            description: continuous delivery tool for Kubernetes
    - Networking:
        - Traefik-docker:
            icon: traefik.png
            href: https://traefik.timmybtech.com/
            description: open-source reverse proxy and load balancer
            widget:
              type: traefik
              url: https://traefik.timmybtech.com
        - Traefik-k8s:
            icon: traefik.png
            href: https://traefik.local.timmybtech.com/
            description: open-source reverse proxy and load balancer
            widget:
              type: traefik
              url: https://traefik.local.timmybtech.com
              username: <TRAEFIK_USER>
              password: <TRAEFIK_PASSWORD>
        - Gitea:
            icon: gitea.png
            href: "https://gitea.local.timmybtech.com/"
            description: self-hosted git service
            namespace: default
            app: gitea
  widgets.yaml: |
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
    - search:
        provider: custom
        url: https://whoogle.local.timmybtech.com/
        target: _blank
  docker.yaml: ""
