---
apiVersion: v1
kind: Namespace
metadata:
  name: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: grafana
spec:
  storageClassName: nfs-csi-synologynas
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-env
  namespace: grafana
data:
  GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-piechart-panel,alexanderzobnin-zabbix-app,https://github.com/performancecopilot/grafana-pcp/releases/download/v5.1.1/performancecopilot-pcp-app-5.1.1.zip;performancecopilot-pcp-app,https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
  GF_METRICS_BASIC_AUTH_USERNAME: <path:secret/data/grafana#GF_METRICS_BASIC_AUTH_USERNAME>
  GF_METRICS_BASIC_AUTH_PASSWORD: <path:secret/data/grafana#GF_METRICS_BASIC_AUTH_PASSWORD>
  GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
  GF_SERVER_ROOT_URL: "https://grafana.timmybtech.com"
  GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
  GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "<path:secret/data/grafana#GF_AUTHENTIK_CLIENT_ID>"
  GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "<path:secret/data/grafana#GF_AUTHENTIK_SECRET_ID>"
  GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
  GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://authentik.timmybtech.com/application/o/authorize/"
  GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://authentik.timmybtech.com/application/o/token/"
  GF_AUTH_GENERIC_OAUTH_API_URL: "https://authentik.timmybtech.com/application/o/userinfo/"
  GF_AUTH_SIGNOUT_REDIRECT_URL: "https://authentik.timmybtech.com/application/o/grafana/end-session/"
  # Optionally enable auto-login (bypasses Grafana login screen)
  GF_AUTH_OAUTH_AUTO_LOGIN: "true"
  # Optionally map user groups to Grafana roles
  GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'homelab Admins') && 'Admin' || contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:12.0.1
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: grafana-env
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-internal
  namespace: grafana
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.local.timmybtech.com`)
      kind: Rule
      services:
        - name: grafana
          port: 3000
      # middlewares:
      #   - name: crowdsec-bouncer
      #     namespace: traefik
  tls:
    secretName: local-timmybtech-com-tls
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-public
  namespace: grafana
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.timmybtech.com`)
      kind: Rule
      services:
        - name: grafana
          port: 3000
  tls:
    secretName: timmybtech-com-tls
