apiVersion: v1
kind: Namespace
metadata:
  name: n8n
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: n8n-claim0
  name: n8n-claim0
  namespace: n8n
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-csi-synologynas
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    avp.kubernetes.io/path: "secret/data/postgres_db"
  labels:
    service: n8n
  name: n8n
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      service: n8n
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: n8n
        app.kubernetes.io/name: n8n
    spec:
      initContainers:
        - name: volume-permissions
          image: busybox:1.37
          command: ["sh", "-c", "chown 1000:1000 /data"]
          volumeMounts:
            - name: n8n-claim0
              mountPath: /data
      containers:
        - command:
            - /bin/sh
          args:
            - -c
            - sleep 5; n8n start
          env:
            - name: DB_TYPE
              value: postgresdb
            - name: DB_POSTGRESDB_HOST
              value: <HOST_NAME>
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: n8n
            - name: DB_POSTGRESDB_USER
              value: <USER>
            - name: DB_POSTGRESDB_PASSWORD
              value: <PASSWORD>
            - name: N8N_PROTOCOL
              value: http
            - name: N8N_PORT
              value: "5678"
            - name: WEBHOOK_URL
              value: https://n8n.timmybtech.com
            - name: N8N_METRICS
              value: "true"
            - name: N8N_TEMPLATES_ENABLED
              value: "true"
            - name: N8N_HOST
              value: n8n.timmybtech.com
            - name: N8N_PROTOCOL
              value: https
            - name: N8N_EDITOR_BASE_URL
              value: https://n8n.timmybtech.com
            - name: NODE_OPTIONS
              value: --max-old-space-size=768
          image: n8nio/n8n:1.113.3
          name: n8n
          ports:
            - containerPort: 5678
          resources:
            requests:
              cpu: "100m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "900Mi"
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-claim0
      restartPolicy: Always
      volumes:
        - name: n8n-claim0
          persistentVolumeClaim:
            claimName: n8n-claim0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: n8n
  name: n8n
  namespace: n8n
spec:
  ports:
    - name: "5678"
      port: 5678
      targetPort: 5678
      protocol: TCP
  selector:
    service: n8n
status:
  loadBalancer: {}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: n8n-internal
  namespace: n8n
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`n8n.local.timmybtech.com`)
      kind: Rule
      services:
        - name: n8n
          port: 5678
      # middlewares:
      #   - name: crowdsec-bouncer
      #     namespace: traefik
  tls:
    secretName: local-timmybtech-com-tls
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: n8n-public
  namespace: n8n
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`n8n.timmybtech.com`)
      kind: Rule
      services:
        - name: n8n
          port: 5678
      # middlewares:
      #   - name: default-headers
      #     namespace: traefik
      #   - name: secure-headers
      #     namespace: traefik
  tls:
    secretName: timmybtech-com-tls
