---
apiVersion: v1
kind: Namespace
metadata:
  name: paperless-ngx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: data
  name: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: media
  name: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: redisdata
  name: redisdata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: paperless-export
  name: paperless-export
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: paperless-consume
  name: paperless-consume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: webserver
        app.kubernetes.io/name: paperless-ngx
    spec:
      containers:
        - env:
            - name: PAPERLESS_DBHOST
              value: <path:secret/data/postgres_db#HOST_NAME>
            - name: PAPERLESS_DBNAME
              value: paperless_utf8
            - name: PAPERLESS_DBPASS
              value: <path:secret/data/postgres_db#PASSWORD>
            - name: PAPERLESS_DBPORT
              value: "5432"
            - name: PAPERLESS_DBUSER
              value: <path:secret/data/postgres_db#USER>
            - name: PAPERLESS_REDIS
              value: redis://broker.paperless-ngx:6379
            - name: PAPERLESS_URL
              value: https://paperless.local.timmybtech.com
            - name: PAPERLESS_ADMIN_USER
              value: <path:secret/data/argocd#PAPERLESS_ADMIN_USER>
            - name: PAPERLESS_ADMIN_PASSWORD
              value: <path:secret/data/argocd#PAPERLESS_ADMIN_PASSWORD>
            - name: PAPERLESS_APPS
              value: "allauth.socialaccount.providers.openid_connect"
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              value: |
                {
                  "openid_connect": {
                    "APPS": [
                      {
                        "provider_id": "authentik",
                        "name": "Authentik",
                        "client_id": "<path:secret/data/argocd#AUTHENTIK_PAPERLESS_CLIENT_ID>",
                        "secret": "<path:secret/data/argocd#AUTHENTIK_PAPERLESS_SECRET_ID>",
                        "settings": {
                          "server_url": "https://authentik.timmybtech.com/application/o/paperless/.well-known/openid-configuration"
                        }
                      }
                    ],
                    "OAUTH_PKCE_ENABLED": "True"
                  }
                }
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          name: webserver
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: data
            - mountPath: /usr/src/paperless/media
              name: media
            - mountPath: /usr/src/paperless/export
              name: paperless-export
            - mountPath: /usr/src/paperless/consume
              name: paperless-consume
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export
        - name: paperless-consume
          persistentVolumeClaim:
            claimName: paperless-consume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: broker
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: broker
    spec:
      containers:
        - image: docker.io/library/redis:8
          name: broker
          volumeMounts:
            - mountPath: /data
              name: redisdata
      restartPolicy: Always
      volumes:
        - name: redisdata
          persistentVolumeClaim:
            claimName: redisdata
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: broker
  name: broker
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: broker
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: webserver
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: paperless-ingress
  namespace: paperless-ngx
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`paperless.local.timmybtech.com`)
      kind: Rule
      services:
        - name: webserver
          port: 8000
  tls:
    secretName: local-timmybtech-com-tls
