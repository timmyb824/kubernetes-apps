apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    avp.kubernetes.io/path: "secret/data/shlink"
  labels:
    io.kompose.service: shlink
  name: shlink
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: shlink
  strategy: {}
  template:
    metadata:
      annotations: {}
      labels:
        io.kompose.network/shlink-default: "true"
        io.kompose.service: shlink
        app.kubernetes.io/name: shlink
    spec:
      containers:
        - env:
            - name: DB_DRIVER
              value: postgres
            - name: DB_HOST
              value: <DB_HOST>
            - name: DB_PASSWORD
              value: <DB_PASSWORD>
            - name: DB_USER
              value: <DB_USER>
            - name: DEFAULT_DOMAIN
              value: timmybtech.com
            - name: GEOLITE_LICENSE_KEY
              value: <GEOLITE_LICENSE_KEY>
            - name: IS_HTTPS_ENABLED
              value: "true"
          image: shlinkio/shlink:stable
          name: shlink
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    io.kompose.service: shlink
  name: shlink
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: shlink
status:
  loadBalancer: {}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: shlink-ingress
  namespace: shlink
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`shlink.local.timmybtech.com`)
      kind: Rule
      services:
        - name: shlink
          port: 8080
  tls:
    secretName: local-timmybtech-com-tls
