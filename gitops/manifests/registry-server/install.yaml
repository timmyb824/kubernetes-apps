---
apiVersion: v1
kind: Namespace
metadata:
  name: registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pvc
  namespace: registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 24Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-server
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-server
  template:
    metadata:
      labels:
        app: registry-server
        app.kubernetes.io/name: registry-server
    spec:
      containers:
        - name: registry
          image: registry:3.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin
              value: "[http://registry.local.timmybtech.com,https://registry.local.timmybtech.com]"
            - name: REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods
              value: "[HEAD,GET,OPTIONS,DELETE,PUT,POST]"
            - name: REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials
              value: "[true]"
            - name: REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers
              value: "[Authorization,Accept,Cache-Control]"
            - name: REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers
              value: "[Docker-Content-Digest]"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_SECRET
              value: "<path:secret/data/argocd#REGISTRY_HTTP_SECRET>"
            - name: REGISTRY_LOG_LEVEL
              value: "info"
            - name: REGISTRY_HTTP_DEBUG_ADDR
              value: "0.0.0.0:5001"
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_PATH
              value: "/metrics"
          volumeMounts:
            - name: registry-storage
              mountPath: /var/lib/registry
          ports:
            - containerPort: 5000
              name: http
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: registry-storage
          persistentVolumeClaim:
            claimName: registry-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: registry-server
  namespace: registry
spec:
  selector:
    app: registry-server
  ports:
    - port: 5000
      targetPort: http
      protocol: TCP
      name: http
    - port: 5001
      targetPort: 5001
      protocol: TCP
      name: metrics
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: registry-ingress
  namespace: registry
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`registry.local.timmybtech.com`)
      kind: Rule
      services:
        - name: registry-server
          port: 5000
    - match: Host(`registry.local.timmybtech.com`) && PathPrefix(`/metrics`)
      kind: Rule
      services:
        - name: registry-server
          port: 5001
  tls:
    secretName: local-timmybtech-com-tls
###### TAILSCALE ######
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: registry-server
#   namespace: registry
#   annotations: {}
# spec:
#   ingressClassName: tailscale
#   defaultBackend:
#     service:
#       name: registry-server
#       port:
#         number: 5000
#   tls:
#     - hosts:
#         - registry-server
