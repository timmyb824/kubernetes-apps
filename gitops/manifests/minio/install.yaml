apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
        app.kubernetes.io/name: minio
    spec:
      containers:
        - name: minio
          image: docker.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
          imagePullPolicy: Always
          resources: {}
          args:
            - server
            - /storage
            - --console-address
            - ":9001"
          env:
            - name: MINIO_ROOT_PASSWORD
              value: <path:secret/data/argocd#MINIO_ADMIN_PASSWORD>
            - name: MINIO_ROOT_USER
              value: <path:secret/data/argocd#MINIO_ADMIN_USER>
            - name: MINIO_PROMETHEUS_URL
              value: "https://prometheus.local.timmybtech.com"
            - name: MINIO_PROMETHEUS_JOB_ID
              value: "minio-job"
          ports:
            - containerPort: 9000
              hostPort: 9000
            - containerPort: 9001
              hostPort: 9001
          volumeMounts:
            - name: storage
              mountPath: "/storage"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: minio
  namespace: minio
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-csi-synologynas
  volumeName: pvc-e5d015cd-56cf-423d-a687-ab5ee0737bd3
  resources:
    requests:
      storage: 64Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio
spec:
  ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
    - name: gui
      port: 9001
      targetPort: 9001
  selector:
    app: minio
status:
  loadBalancer: {}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: minio-gui-ingress
  namespace: minio
  annotations:
    kubernetes.io/ingress.class: traefik-external
    # ingress.kubernetes.io/auth-type: "basic"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`minio-ui.local.timmybtech.com`)
      kind: Rule
      services:
        - name: minio
          port: 9001

  tls:
    secretName: local-timmybtech-com-tls
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: minio-internal
  namespace: minio
  annotations:
    kubernetes.io/ingress.class: traefik-external
    # ingress.kubernetes.io/auth-type: "basic"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`minio.local.timmybtech.com`)
      kind: Rule
      services:
        - name: minio
          port: 9000

  tls:
    secretName: local-timmybtech-com-tls
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: minio-public
  namespace: minio
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`minio.timmybtech.com`)
      kind: Rule
      services:
        - name: minio
          port: 9000
  tls:
    secretName: timmybtech-com-tls
