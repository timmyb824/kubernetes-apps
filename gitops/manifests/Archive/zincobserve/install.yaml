apiVersion: v1
kind: Service
metadata:
  name: zincobserve
  namespace: zincobserve
spec:
  clusterIP: None
  selector:
    app: zincobserve
  ports:
  - name: http
    port: 5080
    targetPort: 5080

---

# create statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zincobserve
  namespace: zincobserve
  annotations:
    avp.kubernetes.io/path: "secret/data/zincobserve"
  labels:
    name: zincobserve
spec:
  serviceName: zincobserve
  replicas: 1
  selector:
    matchLabels:
      name: zincobserve
      app: zincobserve
  template:
    metadata:
      labels:
        name: zincobserve
        app: zincobserve
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 10000
        runAsGroup: 3000
        runAsNonRoot: true
      # terminationGracePeriodSeconds: 0
      containers:
        - name: zincobserve
          image: public.ecr.aws/zinclabs/zincobserve:latest
          env:
            - name: ZO_ROOT_USER_EMAIL
              value: <ROOT_USER_EMAIL>
            - name: ZO_ROOT_USER_PASSWORD
              value: <ROOT_USER_PASSWORD>
            - name: ZO_DATA_DIR
              value: /data
          # command: ["/bin/bash", "-c", "while true; do sleep 1; done"]
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1024m
              memory: 2048Mi
            requests:
              cpu: 256m
              memory: 50Mi
          ports:
            - containerPort: 5080
              name: http
          volumeMounts:
          - name: data
            mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: nfs-csi-synologynas
      # NOTE: You can increase the storage size
      resources:
        requests:
          storage: 64Gi

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: zincobserve-ingress
  namespace: zincobserve
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`zincobserve.local.timmybtech.com`) # create A record in pihole
      kind: Rule
      services:
        - name: zincobserve
          port: 5080
  tls:
    secretName: local-timmybtech-com-tls # or local-example-com-staging-tls
