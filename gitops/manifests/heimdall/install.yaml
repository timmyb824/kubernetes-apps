---
apiVersion: v1
kind: Namespace
metadata:
  name: heimdall
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: heimdall-claim
  namespace: heimdall
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-csi-synologynas
  volumeName: pvc-489a409e-a21f-4885-81d0-4d8e7619a9a9
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: heimdall
  name: heimdall
  namespace: heimdall
spec:
  ports:
    # - name: "http"
    #   port: 718
    #   targetPort: 80
    - name: "https"
      port: 719
      targetPort: 443
  selector:
    io.kompose.service: heimdall
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: heimdall
  name: heimdall
  namespace: heimdall
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: heimdall
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: heimdall
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/New_York
          image: lscr.io/linuxserver/heimdall:2.5.5
          name: heimdall
          ports:
            # - containerPort: 80
            - containerPort: 443
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: heimdall-claim
      restartPolicy: Always
      volumes:
        - name: heimdall-claim
          persistentVolumeClaim:
            claimName: heimdall-claim
status: {}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: heimdall-ingress
  namespace: heimdall
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`heimdall.local.timmybtech.com`) # create A record in pihole
      kind: Rule
      services:
        - name: heimdall
          port: 719
  tls:
    secretName: local-timmybtech-com-tls # or local-example-com-staging-tls