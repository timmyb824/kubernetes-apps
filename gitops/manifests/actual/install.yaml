apiVersion: v1
kind: Namespace
metadata:
  name: actual
---
apiVersion: v1
kind: Secret
metadata:
  name: actual-secrets
  namespace: actual
type: Opaque
stringData:
  ACTUAL_PASSWORD: "<path:secret/data/argocd#ACTUAL_PASSWORD>"
  ACTUAL_BUDGET_ID: "<path:secret/data/argocd#ACTUAL_BUDGET_ID>"
  OPENAI_API_KEY: "<path:secret/data/argocd#OPENAI_API_KEY>"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: actual-config
  namespace: actual
data:
  # Every 4 hours, on the hour
  CLASSIFICATION_SCHEDULE_CRON: "0 */4 * * *"
  # Choose: openai | anthropic | google-generative-ai | ollama | groq
  LLM_PROVIDER: "openai"
  # JSON string, same as your compose
  FEATURES: '["classifyOnStartup","freeWebSearch","suggestNewCategories"]'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: actual-data
  namespace: actual
spec:
  accessModes: ["ReadWriteOnce"]
  storageClassName: "nfs-csi-synologynas"
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: actual-server
  namespace: actual
spec:
  replicas: 1
  selector:
    matchLabels:
      app: actual-server
  template:
    metadata:
      labels:
        app: actual-server
    spec:
      containers:
        - name: actual-server
          image: docker.io/actualbudget/actual-server:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: ACTUAL_PORT
              value: "5006"
          ports:
            - containerPort: 5006
              name: http
          volumeMounts:
            - name: data
              mountPath: /data
          readinessProbe:
            exec:
              command: ["sh", "-c", "node src/scripts/health-check.js"]
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["sh", "-c", "node src/scripts/health-check.js"]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              memory: 512Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: actual-data
---
apiVersion: v1
kind: Service
metadata:
  name: actual-server
  namespace: actual
spec:
  selector:
    app: actual-server
  ports:
    - name: http
      port: 5006
      targetPort: 5006
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: actual-ai
  namespace: actual
spec:
  replicas: 1
  selector:
    matchLabels:
      app: actual-ai
  template:
    metadata:
      labels:
        app: actual-ai
    spec:
      initContainers:
        - name: wait-for-actual
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              "until nc -z actual-server 5006; do echo 'waiting for actual-server...'; sleep 3; done",
            ]
      containers:
        - name: actual-ai
          image: docker.io/sakowicz/actual-ai:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: ACTUAL_SERVER_URL
              value: "http://actual-server:5006"
            - name: ACTUAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: actual-secrets
                  key: ACTUAL_PASSWORD
            - name: ACTUAL_BUDGET_ID
              valueFrom:
                secretKeyRef:
                  name: actual-secrets
                  key: ACTUAL_BUDGET_ID
            - name: CLASSIFICATION_SCHEDULE_CRON
              valueFrom:
                configMapKeyRef:
                  name: actual-config
                  key: CLASSIFICATION_SCHEDULE_CRON
            - name: LLM_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: actual-config
                  key: LLM_PROVIDER
            - name: FEATURES
              valueFrom:
                configMapKeyRef:
                  name: actual-config
                  key: FEATURES
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: actual-secrets
                  key: OPENAI_API_KEY
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              memory: 512Mi
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: actual-ingress
  namespace: actual
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`actual.local.timmybtech.com`)
      kind: Rule
      services:
        - name: actual-server
          port: 5006
  tls:
    secretName: local-timmybtech-com-tls
