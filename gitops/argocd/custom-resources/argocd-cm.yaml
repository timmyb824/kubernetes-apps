# envsubst < argocd-cm.yaml | kubectl apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  statusbadge.enabled: "true"
  # add an additional local user with apiKey and login capabilities
  #   apiKey - allows generating API keys
  #   login - allows to login using UI
  accounts.readonlyuser: apiKey
  accounts.readonlyuser.enabled: "true"
  accounts.tbryant: apiKey, login
  accounts.tbryant.enabled: "true"
  admin.enabled: "true"
  configManagementPlugins: |-
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./", "-s", "argocd-vault-plugin-credentials"]
  url: https://argocd.local.timmybtech.com
  dex.config: |
    connectors:
    - config:
        issuer: ${AUTHENTIK_ARGOCD_ISSUER}
        clientID: ${AUTHENTIK_ARGOCD_CLIENT_ID}
        clientSecret: $dex.authentik.clientSecret # WARNING: using envsubst will cause $dex to dropped from the secret which will break auth with authentik
        insecureEnableGroups: true
        scopes:
          - openid
          - profile
          - email
      name: authentik
      type: oidc
      id: authentik
  resource.customizations: |
    installation.mattermost.com/Mattermost:
      ignoreDifferences: |
        jsonPointers:
        - /spec/size
        - /version
    rbac.authorization.k8s.io/ClusterRole:
      ignoreDifferences: |
        jsonPointers:
        - /rules
  resource.exclusions: |
    - apiGroups:
        - apiextensions.k8s.io
      kinds:
        - CustomResourceDefinition
      nameGlobs:
        - clusterpolicies.kyverno.io
        - policies.kyverno.io
      clusters:
        - "*"
